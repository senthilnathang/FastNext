# FastNext Framework - Development Docker Compose
# Full-stack development environment with hot reload

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    build:
      context: ./docker/postgres
      dockerfile: Dockerfile
    container_name: fastnext-postgres-dev
    environment:
      POSTGRES_DB: fastnext
      POSTGRES_USER: fastnext
      POSTGRES_PASSWORD: fastnext_password
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_backups:/var/lib/postgresql/backups
      - postgres_logs:/var/log/postgresql
      - ./docker/postgres/init-scripts:/docker-entrypoint-initdb.d
    networks:
      - fastnext-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fastnext -d fastnext"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: fastnext-redis-dev
    command: redis-server --appendonly yes --requirepass redis_password
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - fastnext-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redis_password", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: fastnext-backend-dev
    environment:
      # Database
      POSTGRES_SERVER: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: fastnext
      POSTGRES_USER: fastnext
      POSTGRES_PASSWORD: fastnext_password

      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: redis_password
      REDIS_DB: 0

      # Application
      SECRET_KEY: dev-secret-key-change-in-production
      ENVIRONMENT: development
      DEBUG: "true"
      PORT: 8000

      # Cache
      CACHE_ENABLED: true
      CACHE_DEFAULT_TTL: 300

      # Performance
      WORKERS: 1
      RELOAD: true
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - backend_logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - fastnext-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: fastnext-frontend-dev
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:8000
      NEXT_PUBLIC_ENVIRONMENT: development
      PORT: 3000
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - fastnext-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  # Nginx Reverse Proxy (Optional for development)
  nginx:
    image: nginx:alpine
    container_name: fastnext-nginx-dev
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/dev.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend
    networks:
      - fastnext-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    profiles:
      - nginx  # Optional service, start with --profile nginx

  # Database Admin (pgAdmin)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: fastnext-pgadmin-dev
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@fastnext.dev
      PGADMIN_DEFAULT_PASSWORD: admin_password
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - fastnext-network
    profiles:
      - tools  # Optional service, start with --profile tools
    restart: unless-stopped

  # Redis Admin (RedisInsight)
  redis-insight:
    image: redislabs/redisinsight:latest
    container_name: fastnext-redis-insight-dev
    ports:
      - "8001:8001"
    volumes:
      - redis_insight_data:/db
    depends_on:
      - redis
    networks:
      - fastnext-network
    profiles:
      - tools  # Optional service, start with --profile tools
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  postgres_backups:
    driver: local
  postgres_logs:
    driver: local
  redis_data:
    driver: local
  backend_logs:
    driver: local
  pgadmin_data:
    driver: local
  redis_insight_data:
    driver: local

networks:
  fastnext-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
