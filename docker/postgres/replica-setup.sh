#!/bin/bash
# PostgreSQL Replica Server Setup
# Configures a standby server for streaming replication

set -e

echo "Setting up PostgreSQL Replica..."

# Wait for primary to be ready
until PGPASSWORD=${POSTGRES_REPLICATION_PASSWORD} pg_isready -h ${POSTGRES_MASTER_HOST} -p ${POSTGRES_MASTER_PORT:-5432} -U ${POSTGRES_REPLICATION_USER:-replicator}; do
    echo "Waiting for primary database..."
    sleep 2
done

echo "Primary database is ready. Starting base backup..."

# Stop PostgreSQL if running
pg_ctl -D ${PGDATA} stop || true

# Remove existing data directory
rm -rf ${PGDATA}/*

# Take base backup from primary
PGPASSWORD=${POSTGRES_REPLICATION_PASSWORD} pg_basebackup \
    -h ${POSTGRES_MASTER_HOST} \
    -p ${POSTGRES_MASTER_PORT:-5432} \
    -U ${POSTGRES_REPLICATION_USER:-replicator} \
    -D ${PGDATA} \
    -Fp \
    -Xs \
    -P \
    -R

# Configure replica-specific settings
cat >> ${PGDATA}/postgresql.conf <<EOF

# ============================================================================
# REPLICA-SPECIFIC SETTINGS
# ============================================================================

# Hot standby settings
hot_standby = on
hot_standby_feedback = on
max_standby_streaming_delay = 30s
wal_receiver_status_interval = 10s
wal_receiver_timeout = 60s

# Performance tuning for replica
shared_buffers = 512MB
effective_cache_size = 1536MB
work_mem = 5MB

# Logging
log_line_prefix = '[REPLICA] %t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '

EOF

# The pg_basebackup with -R flag creates standby.signal and recovery config
# Ensure the replica knows how to connect to primary
cat > ${PGDATA}/postgresql.auto.conf <<EOF
# Automatically generated by replica setup

primary_conninfo = 'host=${POSTGRES_MASTER_HOST} port=${POSTGRES_MASTER_PORT:-5432} user=${POSTGRES_REPLICATION_USER:-replicator} password=${POSTGRES_REPLICATION_PASSWORD} application_name=replica'
primary_slot_name = '${REPLICATION_SLOT_NAME:-replica_1_slot}'
restore_command = 'cp /var/lib/postgresql/backups/%f %p'

EOF

# Ensure proper permissions
chown -R postgres:postgres ${PGDATA}
chmod 700 ${PGDATA}

echo "Replica setup complete!"
echo "Primary: ${POSTGRES_MASTER_HOST}:${POSTGRES_MASTER_PORT:-5432}"
echo "Replication slot: ${REPLICATION_SLOT_NAME:-replica_1_slot}"

# Start PostgreSQL
pg_ctl -D ${PGDATA} -w start

echo "Replica is now streaming from primary!"
