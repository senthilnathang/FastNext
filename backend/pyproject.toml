[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "fastnext-backend"
dynamic = ["version"]
description = "FastNext Framework Backend - Enterprise-grade FastAPI backend with comprehensive scaffolding system"
readme = "README.md"
license = "MIT"
requires-python = ">=3.11"
authors = [
    { name = "FastNext Team", email = "team@fastnext.dev" },
]
keywords = [
    "fastapi",
    "backend",
    "framework",
    "scaffolding",
    "crud",
    "enterprise",
    "async",
    "python",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Framework :: FastAPI",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Code Generators",
]
dependencies = [
    # Core FastAPI dependencies
    "fastapi==0.115.5",
    "uvicorn[standard]==0.32.1",

    # Database
    "sqlalchemy[asyncio]==2.0.36",
    "asyncpg==0.30.0",
    "alembic==1.14.0",

    # Authentication & Security
    "python-jose[cryptography]==3.3.0",
    "passlib[bcrypt]==1.7.4",
    "cryptography==44.0.0",
    "authlib==1.3.2",

    # Validation
    "pydantic[email]==2.10.3",
    "pydantic-settings==2.7.0",

    # Async HTTP
    "httpx==0.28.1",

    # Caching
    "redis[hiredis]>=5.2.0",
    "aiocache==0.12.2",

    # Background tasks
    "celery==5.4.0",
    "kombu==5.4.2",

    # Monitoring & Logging
    "structlog>=24.5.0",
    "python-json-logger>=3.2.1",
    "psutil==6.1.0",
    "opentelemetry-api==1.28.2",
    "opentelemetry-sdk==1.28.2",
    "opentelemetry-instrumentation-fastapi==0.49b2",
    "opentelemetry-instrumentation-sqlalchemy==0.49b2",

    # GraphQL
    "strawberry-graphql[fastapi]==0.246.2",
    "strawberry-graphql[debug-server]==0.246.2",

    # Utilities
    "python-dateutil==2.9.0",
    "click==8.1.7",
    "rich==13.9.4",
    "typer==0.15.1",

    # Email
    "emails==0.6",

    # File handling
    "python-magic==0.4.27",
    "pillow==11.0.0",

    # Data Import/Export
    "openpyxl==3.1.5",
    "xlsxwriter==3.2.0",
    "pandas==2.2.3",
    "xlrd==2.0.1",
    "lxml==5.3.0",
    "PyYAML==6.0.2",
    "aiofiles==24.1.0",

    # Security
    "python-owasp-zap-v2.4==0.0.21",
    "bandit==1.8.0",

    # Additional utilities
    "pyotp==2.9.0",
    "python-decouple==3.8",
]

[project.optional-dependencies]
dev = [
    "python-dotenv==1.0.0",
    "python-decouple==3.8",
    "watchfiles==0.21.0",
    "debugpy==1.8.0",
    "pytest==7.4.3",
    "pytest-asyncio==0.21.1",
    "pytest-cov==4.1.0",
    "pytest-mock==3.12.0",
    "pytest-xdist==3.5.0",
    "pytest-html==4.1.1",
    "factory-boy==3.3.0",
    "faker==20.1.0",
    "httpx==0.25.2",
    "pytest-postgresql==5.0.0",
    "pytest-redis==3.0.2",
    "sqlalchemy-utils==0.41.1",
    "black==23.11.0",
    "isort==5.12.0",
    "flake8==6.1.0",
    "mypy==1.7.1",
    "pre-commit==3.6.0",
    "pylint==3.0.3",
    "safety==2.3.5",
    "bandit==1.7.5",
    "semgrep==1.51.0",
    "sphinx==7.2.6",
    "sphinx-rtd-theme==1.3.0",
    "sphinx-autodoc-typehints==1.25.2",
    "memory-profiler==0.61.0",
    "py-spy==0.3.14",
    "locust==2.17.0",
    "ipython==8.18.1",
    "jupyter==1.0.0",
    "notebook==7.0.6",
    "swagger-ui-bundle==0.0.9",
]
test = [
    "pytest==7.4.3",
    "pytest-asyncio==0.21.1",
    "pytest-xdist==3.5.0",
    "pytest-cov==4.1.0",
    "pytest-mock==3.12.0",
    "pytest-html==4.1.1",
    "pytest-json-report==1.5.0",
    "pytest-benchmark==4.0.0",
    "pytest-postgresql==5.0.0",
    "pytest-redis==3.0.2",
    "testing.postgresql==1.3.0",
    "fakeredis==2.20.1",
    "factory-boy==3.3.0",
    "faker==20.1.0",
    "mimesis==12.1.0",
    "model-bakery==1.17.0",
    "httpx==0.25.2",
    "responses==0.24.1",
    "requests-mock==1.11.0",
    "vcr.py==5.1.0",
    "tavern==2.3.0",
    "postman-cli==0.1.0",
    "newman==0.0.1",
    "locust==2.17.0",
    "artillery==2.0.0",
    "pytest-benchmark==4.0.0",
    "bandit==1.7.5",
    "safety==2.3.5",
    "semgrep==1.51.0",
    "coverage==7.3.2",
    "pytest-cov==4.1.0",
    "codecov==2.1.13",
    "pytest-mock==3.12.0",
    "responses==0.24.1",
    "freezegun==1.2.2",
    "time-machine==2.13.0",
    "hypothesis==6.92.1",
    "hypothesis-jsonschema==0.22.1",
    "pact-python==2.1.0",
    "selenium==4.16.0",
    "playwright==1.40.0",
    "testcontainers==3.7.1",
    "docker==6.1.3",
    "allure-pytest==2.13.2",
    "pytest-html==4.1.1",
    "pytest-json-report==1.5.0",
    "python-dotenv==1.0.0",
    "pytest-env==1.1.3",
]
docs = [
    "sphinx==7.2.6",
    "sphinx-rtd-theme==1.3.0",
    "sphinx-autodoc-typehints==1.25.2",
]
prod = [
    "gunicorn==21.2.0",
    "uvicorn[standard]==0.24.0",
    "orjson==3.9.10",
    "ujson==5.8.0",
    "uvloop==0.19.0",
    "httptools==0.6.1",
    "sentry-sdk[fastapi]==1.38.0",
    "prometheus-client==0.19.0",
    "opentelemetry-exporter-prometheus==1.12.0rc1",
    "opentelemetry-exporter-jaeger==1.21.0",
    "redis[hiredis]>=5.0.0",
    "python-memcached==1.62",
    "psycopg2-binary==2.9.9",
    "psutil==5.9.6",
    "py-cpuinfo==9.0.0",
    "python-jose[cryptography]==3.3.0",
    "cryptography==41.0.7",
    "python-json-logger>=2.0.0",
    "coloredlogs==15.0.1",
    "celery[redis]==5.3.4",
    "flower==2.0.1",
    "boto3==1.34.0",
    "botocore==1.34.0",
    "sendgrid==6.10.0",
    "mailgun==0.1.1",
    "geoip2==4.7.0",
    "maxminddb==2.2.0",
]
monitoring = [
    "prometheus-client>=0.19.0",
    "sentry-sdk[fastapi]>=1.38.0",
    "opentelemetry-api>=1.21.0",
    "opentelemetry-sdk>=1.21.0",
]

[project.urls]
Homepage = "https://github.com/fastnext/fastnext"
Documentation = "https://docs.fastnext.dev"
Repository = "https://github.com/fastnext/fastnext.git"
Changelog = "https://github.com/fastnext/fastnext/blob/main/CHANGELOG.md"

[project.scripts]
fastnext = "app.cli:main"
scaffold = "scaffold_cli:main"

[tool.hatch.version]
path = "app/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["app"]

# Black configuration
[tool.black]
line-length = 88
target-version = ["py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
    # directories
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | migrations
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app", "tests"]
skip = ["migrations"]

# MyPy configuration
[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
strict_optional = true
show_error_codes = true
namespace_packages = true
exclude = [
    "migrations/",
    "venv/",
    ".venv/",
    "build/",
    "dist/",
]

[[tool.mypy.overrides]]
module = [
    "celery.*",
    "redis.*",
    "passlib.*",
    "jose.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "e2e: marks tests as end-to-end tests",
    "security: marks tests as security tests",
    "performance: marks tests as performance tests",
]
asyncio_mode = "auto"

# Coverage configuration
[tool.coverage.run]
source = ["app"]
omit = [
    "*/migrations/*",
    "*/venv/*",
    "*/.venv/*",
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/scaffolding/*",  # Generated code
]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
skip_covered = false
precision = 2

[tool.coverage.html]
directory = "htmlcov"

# Bandit security linting
[tool.bandit]
exclude_dirs = ["tests", "migrations", "venv", ".venv"]
skips = ["B101"]  # Skip assert_used test

# Pylint configuration
[tool.pylint.main]
load-plugins = [
    "pylint.extensions.code_style",
    "pylint.extensions.typing",
]
ignore = ["migrations", "venv", ".venv"]
ignore-patterns = ["test_*.py"]

[tool.pylint.messages_control]
disable = [
    "C0114",  # missing-module-docstring
    "C0115",  # missing-class-docstring
    "C0116",  # missing-function-docstring
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
]

[tool.pylint.format]
max-line-length = 88

# Ruff linter (alternative to flake8)
[tool.ruff]
line-length = 88
target-version = "py311"
extend-exclude = [
    "migrations",
    ".venv",
    "venv",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011", "B018"]

# Pre-commit hooks configuration (separate .pre-commit-config.yaml file recommended)
# This section is included for reference but should be moved to .pre-commit-config.yaml