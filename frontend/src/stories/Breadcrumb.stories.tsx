import type { Meta, StoryObj } from '@storybook/react'
import Breadcrumb from '../components/layout/Breadcrumb'
import { Home, Building2, Cog } from 'lucide-react'
import { fn } from '@storybook/test'

// Mock next/navigation
const mockRouter = {
  push: fn(),
  replace: fn(),
  prefetch: fn(),
  back: fn(),
  forward: fn(),
  refresh: fn()
}

const meta: Meta<typeof Breadcrumb> = {
  title: 'Layout/Breadcrumb',
  component: Breadcrumb,
  parameters: {
    layout: 'centered',
    nextjs: {
      navigation: {
        pathname: '/dashboard/projects/123',
        query: {},
      },
      router: mockRouter
    }
  },
  tags: ['autodocs'],
  argTypes: {
    className: {
      control: 'text',
      description: 'Additional CSS classes to apply to the breadcrumb'
    },
    customItems: {
      control: 'object',
      description: 'Custom breadcrumb items to display instead of auto-generated ones'
    }
  },
  decorators: [
    (Story) => (
      <div style={{ padding: '20px', width: '600px' }}>
        <Story />
      </div>
    )
  ]
}

export default meta
type Story = StoryObj<typeof meta>

export const AutoGenerated: Story = {
  args: {},
  parameters: {
    nextjs: {
      navigation: {
        pathname: '/dashboard/projects/123',
        query: {},
      }
    },
    docs: {
      description: {
        story: 'Breadcrumb automatically generated from the current path /dashboard/projects/123'
      }
    }
  }
}

export const ShallowPath: Story = {
  args: {},
  parameters: {
    nextjs: {
      navigation: {
        pathname: '/dashboard',
        query: {},
      }
    },
    docs: {
      description: {
        story: 'Breadcrumb for a shallow path /dashboard'
      }
    }
  }
}

export const DeepNestedPath: Story = {
  args: {},
  parameters: {
    nextjs: {
      navigation: {
        pathname: '/admin/users/123/settings/permissions',
        query: {},
      }
    },
    docs: {
      description: {
        story: 'Breadcrumb for a deeply nested path showing multiple levels'
      }
    }
  }
}

export const CustomBreadcrumbs: Story = {
  args: {
    customItems: [
      { label: 'Dashboard', href: '/dashboard', icon: Home },
      { label: 'Projects', href: '/projects', icon: Building2 },
      { label: 'Project Settings', href: '/projects/123/settings', icon: Cog },
      { label: 'Access Control', href: '/projects/123/settings/access' }
    ]
  },
  parameters: {
    docs: {
      description: {
        story: 'Custom breadcrumb items with icons and specific labels'
      }
    }
  }
}

export const WithCustomClassName: Story = {
  args: {
    className: 'text-lg font-semibold text-blue-600'
  },
  parameters: {
    docs: {
      description: {
        story: 'Breadcrumb with custom styling applied via className'
      }
    }
  }
}

export const DarkMode: Story = {
  args: {},
  parameters: {
    backgrounds: {
      default: 'dark',
      values: [
        { name: 'dark', value: '#1f2937' }
      ]
    },
    docs: {
      description: {
        story: 'Breadcrumb component in dark mode'
      }
    }
  },
  decorators: [
    (Story) => (
      <div className="dark" style={{ padding: '20px', width: '600px' }}>
        <Story />
      </div>
    )
  ]
}

export const LongPath: Story = {
  args: {},
  parameters: {
    nextjs: {
      navigation: {
        pathname: '/compliance/ai-trust-center/model-inventory/fairness-dashboard/performance-metrics',
        query: {},
      }
    },
    docs: {
      description: {
        story: 'Breadcrumb handling a very long path with many segments'
      }
    }
  }
}